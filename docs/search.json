[
  {
    "objectID": "mentors.html#overview",
    "href": "mentors.html#overview",
    "title": "Github Instructions",
    "section": "Overview",
    "text": "Overview\nAs a Mentor, you will have administrative access to one or more GitHub repositories associated with Passion Projects on GitHub Classroom. Your role is critical in helping guide student teams, ensuring their repositories follow good practices, and supporting them through their project journey.\n\nüë• Setting Up & Supporting Teams\n\nAssist Students in Team Creation\n\nResponsibility of creating passion project repository should be assigned to Group Student Leader (if not please assign responsibility) and all other students will join the group.\nHelp students create or join sensible team names that clearly reflect their project themes.\nEncourage use of clear, consistent naming and connected with _ (e.g., Traffic_Flow_Prediction, Crop_Yield_Predictor, Gait_Analyzer, etc.).\n\nMonitor Team Repositories\n\nOnce a team accepts the GitHub Classroom assignment, a private repository will be created automatically.\nAs a mentor, you will be added as a repository admin with full privileges to guide and manage content.\n\n\n\n\nüìÅ Repository Structure & Guidance\n\nInitial Structure\n\nA predefined directory structure and report folder are already included in each repo.\nPlease help students understand this structure and stick to it unless modification is essential.\n\nCustom Structure (if needed)\n\nIf a project demands a different directory structure, you may update it.\nImportant: In such cases, the README.md must be updated to clearly reflect the new structure and explain the purpose of each folder.\n\n\n\n\n\nüîç Monitoring and Feedback\n\nTrack Contributions\n\nUse GitHub tools to monitor:\n\nCommit history\nPull requests\nIssues and discussions\nProject boards (if used)\n\n\nEncourage Good Practices\n\nRegular commits with meaningful messages.\nUse of issues to track tasks and bugs.\nMerging via pull requests for collaborative work.\nConsistent use of docstrings and inline comments.\n\n\n\n\n\nüßë‚Äçüè´ Mentor Responsibilities\n\nProvide guidance on:\n\nProject scope and feasibility\nStructuring and modularizing code using Python classes\nWriting clear documentation and final reports\n\nProvide feedback directly in the repository via:\n\nInline comments on commits and pull requests\nOpen or assign issues\nREADME suggestions\n\n\n\n\n\nüóÇÔ∏è Submission and Evaluation\n\nEnsure teams submit the project using GitHub Classroom‚Äôs ‚ÄúSubmit assignment‚Äù feature.\nEvaluate based on:\n\nClarity and functionality of the project\nCode organization and reuse\nUse of GitHub as a collaboration tool\nQuality and clarity of the report\n\n\n\n\n\nüì£ Suggestions & Communication\nIf you have suggestions to improve the workflow or repository template:\n\nPlease feel free to reach out directly to Dr.¬†Sukhjit Singh Sehra.\nFeedback is always welcome to make this a better learning experience for all!\n\n\nThank you for your commitment and mentorship!"
  },
  {
    "objectID": "issues.html",
    "href": "issues.html",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "For Passion Projects ‚Äì Data Science Focus\n\n\nGitHub Issues are a powerful way to plan, track, and manage your tasks collaboratively. You can use them to:\n\nLog bugs and unexpected behavior\nSuggest new features or enhancements\nAssign and track work within your team\nDiscuss and clarify project ideas\n\n\n\n\n\n\nNavigate to Your Repository\nGo to your team‚Äôs repository on GitHub.\nGo to the Issues Tab\nClick the ‚ÄúIssues‚Äù tab located near the top of the repo page.\nClick ‚ÄúNew Issue‚Äù\n\nGive your issue a clear title (e.g., Add data preprocessing pipeline).\nProvide a detailed description including:\n\nWhat needs to be done\nWhy it‚Äôs important\nAny references or screenshots\n\n\nAdd Labels (Optional)\nUse labels like:\n\nbug\nenhancement\ndocumentation\nquestion\ndata-analysis\n\nAssign the Issue\nAssign yourself or a team member responsible for resolving the issue.\nSet a Milestone or Project Board (Optional)\nUse milestones or project boards to group related issues and track progress toward a goal.\n\n\n\n\n\n\nTrack Progress\nAdd comments as you work on the issue. You can link commits and pull requests by mentioning the issue number (e.g., Fixes #12).\nReferencing Issues in Commits\nUse commit messages like:\ngit commit -m \"Added EDA script for customer churn analysis. Closes #7\"\nClose the Issue Once resolved, click ‚ÄúClose issue‚Äù or let your merged pull request do it automatically via commit keywords (e.g., closes #issue-number).\n\n\n\n\n\n\nKeep issues focused and specific.\nBreak large tasks into smaller issues.\nUse checklists within an issue for multi-step tasks.\nRegularly review open issues in your team meetings.\n\n\n\n\n\nTitle: Add feature scaling to model pipeline\nDescription:\nWe need to normalize/standardize features before training our SVM model to improve performance.\nTasks:\n- Identify numerical columns\n- Use StandardScaler from sklearn.preprocessing\n- Apply scaling in pipeline\nRefer to notebook: model_training.ipynb\n\nUsing issues effectively will help your team stay organized and produce better results.\nHappy collaborating! üöÄ"
  },
  {
    "objectID": "issues.html#why-use-issues",
    "href": "issues.html#why-use-issues",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "GitHub Issues are a powerful way to plan, track, and manage your tasks collaboratively. You can use them to:\n\nLog bugs and unexpected behavior\nSuggest new features or enhancements\nAssign and track work within your team\nDiscuss and clarify project ideas"
  },
  {
    "objectID": "issues.html#step-by-step-creating-an-issue",
    "href": "issues.html#step-by-step-creating-an-issue",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "Navigate to Your Repository\nGo to your team‚Äôs repository on GitHub.\nGo to the Issues Tab\nClick the ‚ÄúIssues‚Äù tab located near the top of the repo page.\nClick ‚ÄúNew Issue‚Äù\n\nGive your issue a clear title (e.g., Add data preprocessing pipeline).\nProvide a detailed description including:\n\nWhat needs to be done\nWhy it‚Äôs important\nAny references or screenshots\n\n\nAdd Labels (Optional)\nUse labels like:\n\nbug\nenhancement\ndocumentation\nquestion\ndata-analysis\n\nAssign the Issue\nAssign yourself or a team member responsible for resolving the issue.\nSet a Milestone or Project Board (Optional)\nUse milestones or project boards to group related issues and track progress toward a goal."
  },
  {
    "objectID": "issues.html#updating-and-closing-issues",
    "href": "issues.html#updating-and-closing-issues",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "Track Progress\nAdd comments as you work on the issue. You can link commits and pull requests by mentioning the issue number (e.g., Fixes #12).\nReferencing Issues in Commits\nUse commit messages like:\ngit commit -m \"Added EDA script for customer churn analysis. Closes #7\"\nClose the Issue Once resolved, click ‚ÄúClose issue‚Äù or let your merged pull request do it automatically via commit keywords (e.g., closes #issue-number)."
  },
  {
    "objectID": "issues.html#best-practices",
    "href": "issues.html#best-practices",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "Keep issues focused and specific.\nBreak large tasks into smaller issues.\nUse checklists within an issue for multi-step tasks.\nRegularly review open issues in your team meetings."
  },
  {
    "objectID": "issues.html#example-issue-for-a-data-science-project",
    "href": "issues.html#example-issue-for-a-data-science-project",
    "title": "Creating and Tracking Issues on GitHub",
    "section": "",
    "text": "Title: Add feature scaling to model pipeline\nDescription:\nWe need to normalize/standardize features before training our SVM model to improve performance.\nTasks:\n- Identify numerical columns\n- Use StandardScaler from sklearn.preprocessing\n- Apply scaling in pipeline\nRefer to notebook: model_training.ipynb\n\nUsing issues effectively will help your team stay organized and produce better results.\nHappy collaborating! üöÄ"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Github Repository for Passion Project",
    "section": "",
    "text": "To bring uniformity in monitoring your coding progress and team collaboration, we will be using GitHub Classroom for the Passion Project. Follow the steps below carefully to set up your repository and start working as a team:\n\n\n\nCreate a GitHub Account\nEnsure every team member has an active GitHub account. If not, sign up at https://github.com.\nJoin the Assignment\nThe link to access the GitHub Classroom assignment will be sent via email to you:\nüîó https://classroom.github.com/\nThen click ‚ÄúAccept this assignment‚Äù.\nForm or Join a Team (Responsibility Project Group Student Leader)\n\nIf your team already exists, select it from the list.\nIf not, one member (ideally the project lead) should click on ‚ÄúCreate a new team‚Äù and name it sensibly, reflecting your Passion Project‚Äôs title. Encouraged to use of clear, consistent naming and connected with _ (e.g., Traffic_Flow_Prediction, Crop_Yield_Predictor, Gait_Analyzer, etc.).\nAll other team members will join the newly created team (No separate project will be created).\n\n\n\n\n\n\n\nRepository Creation\n\nOnce the team is set, GitHub will automatically generate a private repository for your project.\nEach member must clone this repository to their local system:\n\nGo to the repo homepage.\nClick the green ‚ÄúCode‚Äù button.\nYou will see two options: HTTPS and SSH.\n\n\n\n\nOption A: Clone via HTTPSOption B: Clone via SSH\n\n\n\nIt simpler but requires login everytime\n\ngit clone https://github.com/YourOrganization/your-repo-name.git\n\n\n\nIt is recommended for frequent users, like you.\n\nSteps to set up SSH:\n\nOpen your terminal and generate a new SSH key:\n\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n\nPress Enter to accept the default file location.\nAdd the SSH key to the ssh-agent:\n\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n\nCopy the SSH key to your clipboard:\n\ncat ~/.ssh/id_ed25519.pub\n\nGo to GitHub &gt; Settings &gt; SSH and GPG keys &gt; New SSH key.\n\n\nPaste your key and give it a title (e.g., ‚ÄúMy Laptop‚Äù).\nNow you can clone using:\n\ngit clone git@github.com:YourOrganization/your-repo-name.git\n\n\n\n\nProject Directory & Report\n\nA predefined directory structure is provided in the repository. This must be used for your project development.\nA report template is included under the reports/ folder to help you document your work.\n\n\n\n\n\n\n\nDaily Contributions\n\nWork collaboratively. Every team member is expected to contribute regularly.\nUse meaningful commit messages and push your work daily.\nYour GitHub activity (commits, issues, pull requests) will be monitored and evaluated.\n\nUsing Python Classes\n\nYou are strongly encouraged to organize your code using Python classes to ensure modular and reusable code.\n\nMentor Access\n\nMentors are owners of all repositories. They may review your progress or provide inline suggestions directly in the repo."
  },
  {
    "objectID": "index.html#instructions-for-students",
    "href": "index.html#instructions-for-students",
    "title": "Github Repository for Passion Project",
    "section": "",
    "text": "To bring uniformity in monitoring your coding progress and team collaboration, we will be using GitHub Classroom for the Passion Project. Follow the steps below carefully to set up your repository and start working as a team:\n\n\n\nCreate a GitHub Account\nEnsure every team member has an active GitHub account. If not, sign up at https://github.com.\nJoin the Assignment\nThe link to access the GitHub Classroom assignment will be sent via email to you:\nüîó https://classroom.github.com/\nThen click ‚ÄúAccept this assignment‚Äù.\nForm or Join a Team (Responsibility Project Group Student Leader)\n\nIf your team already exists, select it from the list.\nIf not, one member (ideally the project lead) should click on ‚ÄúCreate a new team‚Äù and name it sensibly, reflecting your Passion Project‚Äôs title. Encouraged to use of clear, consistent naming and connected with _ (e.g., Traffic_Flow_Prediction, Crop_Yield_Predictor, Gait_Analyzer, etc.).\nAll other team members will join the newly created team (No separate project will be created).\n\n\n\n\n\n\n\nRepository Creation\n\nOnce the team is set, GitHub will automatically generate a private repository for your project.\nEach member must clone this repository to their local system:\n\nGo to the repo homepage.\nClick the green ‚ÄúCode‚Äù button.\nYou will see two options: HTTPS and SSH.\n\n\n\n\nOption A: Clone via HTTPSOption B: Clone via SSH\n\n\n\nIt simpler but requires login everytime\n\ngit clone https://github.com/YourOrganization/your-repo-name.git\n\n\n\nIt is recommended for frequent users, like you.\n\nSteps to set up SSH:\n\nOpen your terminal and generate a new SSH key:\n\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n\nPress Enter to accept the default file location.\nAdd the SSH key to the ssh-agent:\n\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519\n\nCopy the SSH key to your clipboard:\n\ncat ~/.ssh/id_ed25519.pub\n\nGo to GitHub &gt; Settings &gt; SSH and GPG keys &gt; New SSH key.\n\n\nPaste your key and give it a title (e.g., ‚ÄúMy Laptop‚Äù).\nNow you can clone using:\n\ngit clone git@github.com:YourOrganization/your-repo-name.git\n\n\n\n\nProject Directory & Report\n\nA predefined directory structure is provided in the repository. This must be used for your project development.\nA report template is included under the reports/ folder to help you document your work.\n\n\n\n\n\n\n\nDaily Contributions\n\nWork collaboratively. Every team member is expected to contribute regularly.\nUse meaningful commit messages and push your work daily.\nYour GitHub activity (commits, issues, pull requests) will be monitored and evaluated.\n\nUsing Python Classes\n\nYou are strongly encouraged to organize your code using Python classes to ensure modular and reusable code.\n\nMentor Access\n\nMentors are owners of all repositories. They may review your progress or provide inline suggestions directly in the repo."
  },
  {
    "objectID": "index.html#creating-an-issues-on-github",
    "href": "index.html#creating-an-issues-on-github",
    "title": "Github Repository for Passion Project",
    "section": "ü™ú Creating an Issues on Github",
    "text": "ü™ú Creating an Issues on Github\n\nImportant\n\n\nCreating an issue is important because it clearly documents a task, bug, or idea, helping the team stay organized, collaborate effectively, and track progress transparently.\nSee more information on\n\n\nüì¶ Submitting the Assignment\n\nFinal Submission\n\n\nOnce your project is complete:\n\nGo to the GitHub Classroom assignment page.\nClick ‚ÄúSubmit assignment‚Äù.\nChoose your team‚Äôs repository.\nProvide a short comment describing your submission, then click Submit.\n\n\n\n\n\nüß∞ Tools & Tips\n\nInstall the Python docstring extension in VS Code to improve your documentation practices:\nüîó https://sukhjitsehra.github.io/vscode/\n\n\n\nüìå Video Recording for GitHub / Report Creation\nüîó https://youtu.be/Yp9QYC1m9VY\n\n\nüìå Final Notes\n\nYour GitHub repo is your workspace and audit trail. Commit sensibly, and avoid pushing unrelated or incomplete work.\nStick to the provided folder structure and report format.\nYour team will be graded on:\n\nCode quality\nGit activity\nTeam collaboration\nFinal report"
  }
]